@using System.Globalization
@using System.Text.Json

@inject NavigationManager NavigationManager
@* @inject ILocalStorageService LocalStorage *@

<TelerikDropDownList Data="@Cultures"
Value="@SelectedCulture"
Width="80px"
ValueChanged="@((string value) => OnValueChanged(value))"
TextField="@nameof(CultureData.Text)"
ValueField="@nameof(CultureData.Value)">
    <ValueTemplate>
        <span class="k-icon">
            <img src="./img/globe.svg"/>
        </span>
        <div class="ddl-separator"></div>
        <span class="text-content">@((context as CultureData).Value.Split("-")[0].ToUpper())</span>
    </ValueTemplate>
    <DropDownListSettings>
        <DropDownListPopupSettings Height="" Width="90px"></DropDownListPopupSettings>
    </DropDownListSettings>
</TelerikDropDownList>

@code { 
    const string DefaultCultureShort = "en-US";

    public class CultureData
    {
        public string Text { get; set; }
        public string Value { get; set; }
    }

    public List<CultureData> Cultures { get; set; } = new List<CultureData>()
    {
        new  CultureData() { Text = "English", Value = "en-US" },
        new  CultureData() { Text = "Spanish", Value = "es-ES" },
    };

    public string SelectedCulture { get; set; }

    public async Task OnValueChanged(string eventArgs)
    {
        SelectedCulture = eventArgs;

        await SetCulture(eventArgs);
    }

    public async Task SetCulture(string culture)
    {
        if (CultureInfo.CurrentCulture.Name != culture)
        {

            // await LocalStorage.SetItemAsync("BlazorCulture", culture);

            await Task.Delay(0);
            NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
        }
    }

    public async Task GetCulture()
    {
        await Task.Delay(0);
        var value = ""; // await LocalStorage.GetItemAsStringAsync("BlazorCulture");
        var parsedValue = !string.IsNullOrEmpty(value) ? JsonSerializer.Deserialize<string>(value) : DefaultCultureShort;

        if (string.IsNullOrEmpty(parsedValue))
        {
            parsedValue = DefaultCultureShort;
        }

        SelectedCulture = parsedValue;
    }

    protected override async Task OnInitializedAsync()
    {
        await GetCulture();
    }

}
