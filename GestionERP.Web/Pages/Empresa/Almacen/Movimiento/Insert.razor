@page "/{CodigoWebEmpresa}/almacen/movimientos/registrar/{TipoRegistro}"

@attribute [Authorize] 
@using GestionERP.Web.Models.Dtos.Almacen
@using GestionERP.Web.Models.Dtos.Compra
@using GestionERP.Web.Models.Dtos.Principal

<PageTitle>@Empresa?.Acronimo - Movimiento - Registrar</PageTitle>

<NavigationLock OnBeforeInternalNavigation="@(Cerrar)" ConfirmExternalNavigation="@(IsAuthUser && IsModified)"/>

<TooltipButtonComponent/>

@if (IsInitPage)
{
	<CardContainerComponent Titulo="@($"Registrando movimiento de {TituloTipoRegistro}")" CodigoServicio="@(codigoServicio)">
		<TelerikNotification @ref="@Alert" Class="k-alert-notification" VerticalPosition="@(NotificationVerticalPosition.Top)" HorizontalPosition="@(NotificationHorizontalPosition.Center)" />
		<CardBody>
			<TelerikForm EditContext="@EditContext" Size="sm">
				<FormValidation>
					<FluentValidationValidator Validator="@(Validator)" />
				</FormValidation>
				<FormItems>
					<FormGroup Class="formgroup" Columns="9" ColumnSpacing="4px"> 
						<FormItem ColSpan="4">
							<Template>
								<label>Operación logística*:</label>
								<div class="item-group">
									<TelerikTextBox @bind-Value="@(MovimientoInsertar.CodigoOperacionLogistica)" Id="codigooplogi" Placeholder="Código" Title="Código" Class="t-main" ReadOnly="@true" Size="sm" Width="70px" />
									@if (EsVisibleBotonOperacion)
									{
										<Empresa.OperacionLogisticaCatalogoPorSesionComponent CodigoEmpresa="@Empresa.Codigo" FlagTipoAccion="@(MovimientoInsertar.FlagTipoRegistro)" CodigoExcluir="@(MovimientoInsertar.CodigoOperacionLogistica?.TrimEnd())" CargarItemSeleccionado="@(CargarItemCatalogoOperacionLogistica)" />
									} 
									<TelerikTextBox @bind-Value="@(Movimiento.NombreOperacionLogistica)" Title="@(Movimiento.NombreOperacionLogistica)" Placeholder="Nombre de operación logística" Class="t-main" ReadOnly="@true" Size="sm" />
								</div>
								<TelerikValidationTooltip For="@(() => MovimientoInsertar.CodigoOperacionLogistica)" TargetSelector="#codigooplogi" />
							</Template>
						</FormItem>
						<FormItem ColSpan="1">
							<Template>
								<label>Tipo de registro:</label>
								<TelerikDropDownList Data="@TiposRegistro" @bind-Value="@MovimientoInsertar.FlagTipoRegistro" Enabled="@(false)" TextField="Nombre" ValueField="Codigo" Width="105px" Size="sm" />
							</Template>
						</FormItem>
						<FormItem ColSpan="2">
							<Template>
								<label>Fecha y hora de operación*:</label>
								<div class="item-group">
									<TelerikDatePicker @bind-Value="@(MovimientoInsertar.FechaHoraOperacion)" OnChange="@OnChangeFechaHoraOperacionHandler" OnClose="@OnFechaHoraOperacionPopupClose" Id="fecoperacion" Width="103px" Size="sm" Min="@FechaIntervalo.FechaInicio" Max="@FechaIntervalo.FechaFin" DisabledDates="@FechasCerradoOperacion" AutoComplete="off" Title="Fecha de operación" Placeholder="dd/MM/yyyy" />
									<TelerikTimePicker @bind-Value="@(MovimientoInsertar.FechaHoraOperacion)" Format="hh:mm:ss tt" Enabled="@(false)" Size="sm" Width="115px" Id="timepicker" Title="Hora de operación" />
								</div> 
								<TelerikValidationTooltip For="@(() => MovimientoInsertar.FechaHoraOperacion)" TargetSelector="#fecoperacion" />
							</Template>
						</FormItem>
						<FormItem ColSpan="1">
							<Template>
								<label>Tipo de cambio:</label>
								<div class="item-group">
									<TelerikTextBox @bind-Value="@(MovimientoInsertar.CodigoTipoCambioDia)" AutoComplete="off" Placeholder="Código" Title="Código" Enabled="@(false)" Size="sm" Width="80px" />
									<TelerikNumericTextBox @bind-Value="@(MovimientoInsertar.MontoTipoCambioDia)" Arrows="@(false)" Enabled="@false" Width="60px" Min="0" Format="N4" Decimals="4" Size="sm" />
								</div>
							</Template>
						</FormItem>

						<FormItem ColSpan="5">
							<Template>
								<label>Entidad*:</label>
								<div class="item-group">
									<TelerikTextBox Value="@(MovimientoInsertar.CodigoEntidad)" DebounceDelay="@(0)" ValueChanged="@ValueChangeEntidadHandler" ValueExpression="@(() => MovimientoInsertar.CodigoEntidad)" OnChange="@OnChangeEntidadHandler" Id="codigoentidad" AutoComplete="off" Placeholder="Código" Title="Código" Size="sm" Width="120px" Enabled="@(!string.IsNullOrEmpty(MovimientoInsertar.CodigoOperacionLogistica) && !TipoMovimiento.EsRequeridoReferencia)" MaxLength="11" />
									@if (!string.IsNullOrEmpty(MovimientoInsertar.CodigoOperacionLogistica) && !TipoMovimiento.EsRequeridoReferencia)
									{
										 <Empresa.EntidadCatalogoComponent CodigoEmpresa="@Empresa.Codigo" FlagTipo="@(TipoMovimiento.FlagTipoEntidad)" CargarItemSeleccionado="@(CargarItemCatalogoEntidad)" CodigoExcluir="@(MovimientoInsertar.CodigoEntidad)" />
									} 
									<TelerikTextBox @bind-Value="@(Movimiento.NombreEntidad)" Title="@(Movimiento.NombreEntidad)" Placeholder="Nombre o razón social del proveedor" Enabled="@(false)" Size="sm" />
								</div>
								<TelerikValidationTooltip For="@(() => MovimientoInsertar.CodigoEntidad)" TargetSelector="#codigoentidad" />
							</Template>
						</FormItem>
						<FormItem ColSpan="2">
							<Template>
								<label>Moneda*:</label>
								<div class="item-group">
									<TelerikTextBox @bind-Value="@(MovimientoInsertar.CodigoMoneda)" Id="codmoneda" AutoComplete="off" Placeholder="Código" Title="Código" Enabled="@(false)" Size="sm" Width="65px" />
									@if (!string.IsNullOrEmpty(MovimientoInsertar.CodigoOperacionLogistica) && !TipoMovimiento.EsRequeridoReferencia)
									{
										<Principal.MonedaCatalogoComponent CargarItemSeleccionado="@(CargarItemCatalogoMoneda)" CodigoExcluir="@(MovimientoInsertar.CodigoMoneda)" />
									}
									<TelerikTextBox @bind-Value="@(Movimiento.NombreMoneda)" Title="@(Movimiento.NombreMoneda)" Placeholder="Nombre" Enabled="@(false)" Size="sm" />
								</div>
								<TelerikValidationTooltip For="@(() => MovimientoInsertar.CodigoMoneda)" TargetSelector="#codmoneda" />
							</Template>
						</FormItem>
						<FormItem ColSpan="2">
							<Template>
								<label>Documento referencia @(TipoMovimiento.EsRequeridoReferencia ? "*" : ""):</label>
								<div class="item-group">
									<TelerikTextBox @bind-Value="@(MovimientoInsertar.CodigoDocumentoReferencia)" Id="coddocreferencia" Placeholder="Código" Title="Código" Class="t-main" ReadOnly="@(TipoMovimiento.EsRequeridoReferencia)" Size="sm" Width="55px" MaxLength="4" />
									@* @if (!TipoMovimiento.EsRequeridoReferencia)
									{
										<span /> //Aquí irá el botón para cargar catalogo documentos según el tipo de entidad.
									} *@
									<TelerikTextBox @bind-Value="@(MovimientoInsertar.SerieDocumentoReferencia)" Placeholder="Serie" Title="Serie" Class="t-main" ReadOnly="@(TipoMovimiento.EsRequeridoReferencia)" Size="sm" Width="50px" MaxLength="4" /> @* Pendiente habilitar para editar *@
									<TelerikTextBox @bind-Value="@(MovimientoInsertar.NumeroDocumentoReferencia)" Placeholder="Número" Title="Número" Class="t-main" ReadOnly="@(TipoMovimiento.EsRequeridoReferencia)" Size="sm" Width="80px" MaxLength="8" /> @* Pendiente habilitar para editar *@
									@if (TipoMovimiento.EsRequeridoReferencia)
									{
										<TelerikButton Icon="@(SvgIcon.Search)" Class="b-primary b-action" ButtonType="@ButtonType.Button" Id="tbtn" Visible="@(EsVisibleBotonCatalogoReferencias)" Enabled="@(!IsLoadingCatalogoReferencias & !IsEditingGridDetalle)" Title="Abrir catálogo de referencia" Size="sm" OnClick="@(MostrarCatalogoReferencia)">
											Buscar
											<TelerikLoader Type="@(LoaderType.Pulsing)" Size="sm" ThemeColor="secondary" Visible="@IsLoadingCatalogoReferencias" />
										</TelerikButton>
										<TelerikButton Icon="@(SvgIcon.Minus)" Size="sm" ButtonType="@ButtonType.Button" Class="b-delete b-action" Id="tbtn" Title="Quitar documento referencia" Visible="@(EsVisibleBotonQuitarReferencia)" OnClick="@(() => { EsVisibleDialogReferencia = true; })">Quitar</TelerikButton>
									}
								</div>
								<TelerikValidationTooltip For="@(() => MovimientoInsertar.CodigoDocumentoReferencia)" TargetSelector="#coddocreferencia" />
							</Template>
						</FormItem>

						@* AQUÍ IRÁ EL BOTÓN DE ALMACÉN DESTINO column 3 *@
						<FormItem ColSpan="2">
							<Template> 
								<label>Local:</label>
								<div class="item-group">
									<TelerikTextBox Value="@(MovimientoInsertar.CodigoLocal)" DebounceDelay="@(0)" ValueChanged="@ValueChangeLocalHandler" ValueExpression="@(() => MovimientoInsertar.CodigoLocal)" OnChange="@OnChangeLocalHandler" Id="local" AutoComplete="off" Placeholder="Código" Title="Código" Size="sm" Width="70px" MaxLength="3" />
									<Empresa.LocalCatalogoComponent CodigoEmpresa="@Empresa.Codigo" CargarItemSeleccionado="@(CargarItemCatalogoLocal)" CodigoExcluir="@(MovimientoInsertar.CodigoLocal)" />
									<TelerikTextBox @bind-Value="@(Movimiento.NombreLocal)" Title="@(Movimiento.NombreLocal)" Placeholder="Nombre" Enabled="@(false)" Size="sm" />
								</div>
								<TelerikValidationTooltip For="@(() => MovimientoInsertar.CodigoLocal)" TargetSelector="#local" /> 
							</Template>
						</FormItem>
						<FormItem ColSpan="4">
							<Template> 
								<label>Centro de costo:</label>
								<div class="item-group">
									<TelerikTextBox Value="@(MovimientoInsertar.CodigoCentroCosto)" DebounceDelay="@(0)" ValueChanged="@ValueChangeCentroCostoHandler" ValueExpression="@(() => MovimientoInsertar.CodigoCentroCosto)" OnChange="@OnChangeCentroCostoHandler" Id="ccosto" AutoComplete="off" Placeholder="Código" Title="Código" Size="sm" Width="185px" MaxLength="18" />
									<Principal.CentroCostoCatalogoComponent CodigoEmpresa="@Empresa.Codigo" CargarItemSeleccionado="@(CargarItemCatalogoCentroCosto)" CodigoExcluir="@(MovimientoInsertar.CodigoCentroCosto)" />
									<TelerikTextBox @bind-Value="@(Movimiento.NombreCentroCosto)" Title="@(Movimiento.NombreCentroCosto)" Placeholder="Nombre" Enabled="@(false)" Size="sm" />
								</div>
								<TelerikValidationTooltip For="@(() => MovimientoInsertar.CodigoCentroCosto)" TargetSelector="#ccosto" />
							</Template>
						</FormItem>

						<FormItem ColSpan="4">
							<Template>
								<label>Observación:</label>
								<TelerikTextBox @bind-Value="@(MovimientoInsertar.Observacion)" OnChange="@OnChangeObservacionHandler" Id="observacion" AutoComplete="off" Title="@(MovimientoInsertar.Observacion)" MaxLength="100" Size="sm" />
								<TelerikValidationTooltip For="@(() => MovimientoInsertar.Observacion)" TargetSelector="#observacion" />
							</Template>
						</FormItem>
						@* AQUÍ IRÁ LA OPERACION REFERENCIA - ES GENERADO AUTOMATICO - ESTA EN ASIENTO CONTABLE *@

						<FormItem ColSpan="9">
							<Template>
								<label>Comentario:</label>
								<TelerikTextArea @bind-Value="@(MovimientoInsertar.Comentario)" OnChange="@OnChangeComentarioHandler" Rows="2" AutoComplete="off" Class="textarea-vertical" Title="@(MovimientoInsertar.Comentario)" Width="44.3%" Size="sm" />
							</Template>
						</FormItem>
					</FormGroup>

					<FormItem Field="Detalle">
						<Template>
							<label>Detalle*:</label>
							<TelerikGrid Data="@(GridDetalles)" Height="auto" Pageable="false" Sortable="true" Resizable="true" Size="sm" EditMode="@(GridEditMode.Inline)" OnUpdate=@UpdateItemDetalleHandler OnCancel="@CancelDetalleHandler" @ref="GridDetalleRef">
								<GridSettings>
									<GridValidationSettings>
										<ValidatorTemplate>
											<FluentValidationValidator Validator="@(GridDetalleValidator)"/>
										</ValidatorTemplate>
									</GridValidationSettings>
								</GridSettings>

								<GridToolBarTemplate>
									<TelerikButton Icon="@(SvgIcon.Plus)" Class="b-primary b-action" ButtonType="@ButtonType.Button" Id="tbtn" Visible="@(!string.IsNullOrEmpty(MovimientoInsertar.CodigoOperacionLogistica) && !TipoMovimiento.EsRequeridoReferencia)" Title="Ir a agregar nuevo ítem" Size="sm" Enabled="@(!IsEditingGridDetalle)" OnClick="@(MostrarAgregarDetalle)">Agregar ítem</TelerikButton>

									<TelerikButton Icon="@(SvgIcon.ZoomIn)" Class="b-primary b-action" ButtonType="@ButtonType.Button" Id="tbtn" Visible="@(EsVisibleBotonCatalogoDetallesReferencia)" Enabled="@(!IsLoadingCatalogoDetallesReferencia & !IsEditingGridDetalle)" Title="Abrir catálogo de artículos de la orden por ingresar" Size="sm" OnClick="@(MostrarCatalogoDetallesReferencia)">
										Abrir catálogo de artículos
										<TelerikLoader Type="@(LoaderType.Pulsing)" Size="sm" ThemeColor="secondary" Visible="@IsLoadingCatalogoDetallesReferencia" />
									</TelerikButton>

									<span class="k-toolbar-spacer" />
									
									<div class="group-amount">
										<div class="item-group-amount">
											<span class="item-text t-strong">Total valor costo:</span>
											<TelerikNumericTextBox @bind-Value="@(MovimientoInsertar.TotalValorCostoMN)" AutoComplete="off" Arrows="@(false)" Class="t-main" ReadOnly="@true" Format="N2" Decimals="2" Width="100px" Size="sm" />
										</div> 
									</div>
								</GridToolBarTemplate>

								<GridColumns>
									<GridColumn Field="CodigoAlmacen" Width="90px" Title="Almacén" HeaderClass="k-justify-content-center grid-column-edit" OnCellRender="@OnCellAlmacenRenderHandler" Editable=@(IsEditableGridCell) >
										<EditorTemplate>
											@{
												MovimientoDetalleGrid item = context as MovimientoDetalleGrid;
												<TelerikTextBox @bind-Value="@(item.CodigoAlmacen)" DebounceDelay="@(0)" Id="almacen" AutoComplete="off" Placeholder="Código" Title="Código" Size="sm" Width="100%" ShowSuffixSeparator="@(true)" MaxLength="3" >
													<TextBoxSuffixTemplate>
														<Empresa.LocalCatalogoComponent CodigoEmpresa="@Empresa.Codigo" CargarItemSeleccionado="@(CargarItemCatalogoLocal)" CodigoExcluir="@(MovimientoInsertar.CodigoLocal)" />
													</TextBoxSuffixTemplate>
												</TelerikTextBox> 
												<TelerikValidationTooltip For="@(() => item.Cantidad)" TargetSelector="#griddetcantidad" />
											}
										</EditorTemplate>
									</GridColumn> 
									<GridColumn Field="NombreTipoArticulo" Width="80px" Title="Tipo" Editable="@false" />
									<GridColumn Field="CodigoArticulo" Width="120px" Title="Código artículo" Editable="@false" />
									<GridColumn Field="NombreArticulo" Width="400px" Title="Nombre de artículo" Editable="@false" />
									<GridColumn Field="Presentacion" Width="200px" Title="Presentación del artículo" Editable="@false" />
									<GridColumn Field="CodigoUnidadMedida" Width="45px" Editable="@false" >
										<HeaderTemplate> <span title="Unidad de Medida">U.M.</span> </HeaderTemplate>
									</GridColumn>
									<GridColumn Field="Cantidad" Width="110px" Title="Cantidad" DisplayFormat="{0:N3}" TextAlign="@ColumnTextAlign.Right" HeaderClass="k-justify-content-center grid-column-edit" OnCellRender="@OnCellCantidadRenderHandler" Editable=@(IsEditableGridCell)>
										<EditorTemplate>
											@{
												MovimientoDetalleGrid item = context as MovimientoDetalleGrid;
												<TelerikNumericTextBox @bind-Value="@(item.Cantidad)" Id="griddetcantidad" AutoComplete="off" Arrows="@(false)" Width="100%" Min="0" Format="N3" Decimals="3" Size="sm" />
												<TelerikValidationTooltip For="@(() => item.Cantidad)" TargetSelector="#griddetcantidad" />
											}
										</EditorTemplate>
									</GridColumn>
									<GridColumn Field="PrecioUnitario" Width="120px" Title="Precio unitario" DisplayFormat="{0:N6}" TextAlign="@ColumnTextAlign.Right" HeaderClass="k-justify-content-center grid-column-edit" >
										<EditorTemplate>
											@* @{
												MovimientoDetalleGrid item = context as MovimientoDetalleGrid;
												<TelerikNumericTextBox @bind-Value="@(item.PrecioUnitario)" Id="griddetpreciouni" AutoComplete="off" Arrows="@(false)" Width="100%" Min="0" Format="N6" Decimals="6" Size="sm" />
												<TelerikValidationTooltip For="@(() => item.PrecioUnitario)" TargetSelector="#griddetpreciouni" />
											} *@
										</EditorTemplate>
									</GridColumn>
									<GridColumn Field="ImporteBruto" Width="138px" Title="Importe bruto" DisplayFormat="{0:N2}" TextAlign="@ColumnTextAlign.Right" HeaderClass="k-justify-content-center" Editable="@false" />  
									<GridColumn Width="100px" Title="Acciones" Locked="@(true)" Editable="@false">
										<Template>
											@{
												MovimientoDetalleGrid item = context as MovimientoDetalleGrid;
											}
											<TelerikButton Icon="@(SvgIcon.Pencil)" Size="sm" Id="tbtn" Title="Modificar ítem" Class="b-primary" ButtonType="@ButtonType.Button" Visible="@(!item.IsEditingItem)" Enabled="@(!IsEditingGridDetalle)" OnClick="@(() => ActivarModificacionDetalle(item))" />
											<TelerikButton Icon="@(SvgIcon.Minus)" Size="sm" Id="tbtn" Title="Quitar ítem" Class="b-delete" ButtonType="@ButtonType.Button" Visible="@(!item.IsEditingItem)" Enabled="@(!IsEditingGridDetalle)" OnClick="@(() => MostrarQuitarDetalle(item.CodigoArticulo))" />
											<TelerikButton Icon="@(SvgIcon.Save)" Size="sm" Id="tbtn" Title="Grabar cambios" Class="b-primary" ButtonType="@ButtonType.Button" Visible="@(item.IsEditingItem)" OnClick="@(GrabarModificacionDetalle)" />
											<TelerikButton Icon="@(SvgIcon.Cancel)" Size="sm" Id="tbtn" Title="Cancelar cambios" Class="b-delete" ButtonType="@ButtonType.Button" Visible="@(item.IsEditingItem)" OnClick="@(DesactivarModificacionDetalle)" /> 
										</Template>
									</GridColumn> 
								</GridColumns>

								<NoDataTemplate>
									<span>Aún no hay ítems por registrar</span>
								</NoDataTemplate>
							</TelerikGrid>
						</Template>

					</FormItem>
				</FormItems> 
				<FormButtons/>
			</TelerikForm>

			<TelerikToolBar Class="toolbar-mainform">
				<ToolBarTemplateItem>
					<TelerikButton Icon="@(SvgIcon.Save)" Id="tbtn" Title="Guardar el registro" Size="sm" ButtonType="@ButtonType.Button" OnClick="@(Insertar)" ThemeColor="primary" Enabled="@(!IsLoadingAction & !IsEditingGridDetalle)">Guardar</TelerikButton>
				</ToolBarTemplateItem>
				<ToolBarSeparator />
				<ToolBarTemplateItem>
					<TelerikButton Icon="@(SvgIcon.Undo)" Id="tbtn" Title="Volver a la vista anterior" Size="sm" ButtonType="@ButtonType.Button" Class="b-primary" OnClick="@(Volver)" Enabled="@(!IsLoadingAction)" Visible="@(EsVisibleVolver)">Volver</TelerikButton>
				</ToolBarTemplateItem>
				<ToolBarSpacer />
				<ToolBarTemplateItem>
					<span>* Campos obligatorios</span>
				</ToolBarTemplateItem>
			</TelerikToolBar>
			  
			@* -- INICIO SECCIÓN CATÁLOGOS INGRESO -- *@
			<TelerikWindow Visible="@EsVisibleCatalogoOrdenes" VisibleChanged="@VisibleCatalogoOrdenesChangedHandler" ThemeColor="dark" Modal="true" Resizable="false" Height="420px" Width="600px" CloseOnOverlayClick="false" FooterLayoutAlign="@WindowFooterLayoutAlign.Start">
				<WindowTitle>Catálogo de órdenes pendientes de ingresar</WindowTitle>
				<WindowActions> 
					<WindowAction Name="Close" Title="Cerrar" />
				</WindowActions>
				<WindowContent>
					<TelerikNotification @ref="@AlertCatalogoOrdenes" Class="k-alert-notification-modal" VerticalPosition="@(NotificationVerticalPosition.Top)" HorizontalPosition="@(NotificationHorizontalPosition.Center)" />

					<TelerikGrid Data="@CatalogoOrdenesIngresar" SelectionMode="@(GridSelectionMode.Single)" Pageable="true" PageSize="@(10)" @bind-SelectedItems="@ItemsSelectedOrden" Height="100%" Sortable="true" Resizable="true" Size="sm" OnRowDoubleClick="@OnRowDoubleClickCatalogoOrdenIngresarHandler">
						<GridToolBarTemplate>
							<span>Año:</span>
							<TelerikDropDownList Data="@CatalogoEjercicios" Value="@CodigoEjercicioFiltro" ValueChanged="@((string value) => OnComboEjercicioValueChanged(value))" TextField="AnioEjercicio" ValueField="CodigoEjercicio" DefaultText="@(!string.IsNullOrEmpty(CodigoEjercicioFiltro) ? "" : " ")" Size="sm" Width="65px" FillMode="solid">
								<ValueTemplate>
									<span class="d-item-strong">@((context as EmpresaEjercicioCatalogoDto).AnioEjercicio)</span>
								</ValueTemplate>
								<DropDownListSettings> <DropDownListPopupSettings Height="auto" /> </DropDownListSettings>
							</TelerikDropDownList>
							<GridSearchBox Size="md" Width="300px" DebounceDelay="100" Placeholder="Buscar en el catálogo..." />

							<span class="k-toolbar-spacer" />

							<TelerikButton Icon="@(SvgIcon.ArrowRotateCwSmall)" Class="b-secondary" ButtonType="@ButtonType.Button" Id="tbtn" Title="Refrescar catálogo" Size="sm" OnClick="@(CargarCatalogoOrdenes)" />
						</GridToolBarTemplate>
						<GridSettings>
							<GridPagerSettings InputType="@(PagerInputType.Buttons)" ButtonCount="@(5)" Position="@(PagerPosition.Bottom)" />
						</GridSettings>
						<GridColumns>
							<GridCheckboxColumn SelectAll="@(false)" Width="33px" Locked="@(true)" />
							<GridColumn Field="CodigoOrden" Width="130px" Title="Código de órden" />
							<GridColumn Field="FechaEmision" Width="115px" Title="Fecha de emisión" DisplayFormat="{0:dd/MM/yyyy}" />
							<GridColumn Field="NombreEntidad" Width="200px" Title="Nombre de entidad proveedor" />
							<GridColumn Field="FechaEntrega" Width="115px" Title="Fecha de entrega" DisplayFormat="{0:dd/MM/yyyy}" />
							<GridColumn Field="NombreLocal" Width="200px" Title="Nombre del local de recepción" />
							<GridColumn Field="NombreSerieDocumento" Width="190px" Title="Nombre de la serie del documento" />
						</GridColumns>
						<NoDataTemplate>
							<TelerikSvgIcon Icon="@SvgIcon.SortClear" ThemeColor="dark" Size="sm" /> <span>No hay registros disponibles</span>
						</NoDataTemplate>
					</TelerikGrid>
				</WindowContent>
				<WindowFooter>
					<TelerikButton Icon="@(SvgIcon.Download)" ThemeColor="secondary" ButtonType="@ButtonType.Button" Size="sm" OnClick="@(SeleccionarItemOrden)">Seleccionar</TelerikButton>
				</WindowFooter>
			</TelerikWindow>

			<TelerikWindow Visible="@EsVisibleCatalogoDetallesOrden" VisibleChanged="@VisibleCatalogoDetallesOrdenChangedHandler" ThemeColor="dark" Modal="true" Resizable="false" Height="420px" Width="600px" CloseOnOverlayClick="false" FooterLayoutAlign="@WindowFooterLayoutAlign.Start">
				<WindowTitle>Catálogo de artículos de la orden de compra pendientes de agregar</WindowTitle>
				<WindowActions>
					<WindowAction Name="Close" Title="Cerrar" />
				</WindowActions>
				<WindowContent>
					<TelerikNotification @ref="@AlertCatalogoDetallesOrden" Class="k-alert-notification-modal" VerticalPosition="@(NotificationVerticalPosition.Top)" HorizontalPosition="@(NotificationHorizontalPosition.Center)" />

					<TelerikGrid Data="@CatalogoDetallesOrden" SelectionMode="@(SelectionModeCatalogoDetalleReferencia)" Pageable="true" PageSize="@(10)" SelectedItemsChanged="@((IEnumerable<OrdenDetalleCatalogoIngresarDto> items) => OnSelectCatalogoDetalle(items))" SelectedItems="@ItemsSelectedDetalleOrden" Height="100%" Sortable="true" Resizable="true" Size="sm" Class="list-grid" OnRowRender="@(OnRowCatalogoDetalleOrdenRenderHandler)" @ref="GridCatalogoDetalleOrdenRef">
						<GridToolBarTemplate>
							<GridSearchBox Size="md" Width="300px" DebounceDelay="100" Placeholder="Buscar en el catálogo..." />
							<span class="k-toolbar-spacer" />
							<TelerikButton Icon="@(SvgIcon.ArrowRotateCwSmall)" Class="b-secondary" ButtonType="@ButtonType.Button" Id="tbtn" Title="Refrescar catálogo" Size="sm" OnClick="@(CargarCatalogoDetalles)" />
						</GridToolBarTemplate>
						<GridSettings>
							<GridPagerSettings InputType="@(PagerInputType.Buttons)" ButtonCount="@(5)" Position="@(PagerPosition.Bottom)" />
						</GridSettings>
						<GridColumns>
							<GridCheckboxColumn Width="33px" Locked="@(true)" CheckBoxOnlySelection="@(true)" SelectAll="@(true)" Visible="@(EsSeleccionableCatalogoDetalleReferencia)" />
							<GridColumn Field="CodigoArticulo" Width="120px" Title="Código artículo" />
							<GridColumn Field="NombreArticulo" Width="200px" Title="Nombre de artículo" />
							<GridColumn Field="CodigoUnidadMedida" Width="45px">
								<HeaderTemplate> <span title="Unidad de Medida">U.M.</span> </HeaderTemplate>
							</GridColumn>
							<GridColumn Field="Cantidad" Width="110px" Title="Cantidad" DisplayFormat="{0:N3}" TextAlign="@ColumnTextAlign.Right" HeaderClass="k-justify-content-center" />
							<GridColumn Field="PrecioUnitario" Width="120px" Title="Precio unitario" DisplayFormat="{0:N6}" TextAlign="@ColumnTextAlign.Right" HeaderClass="k-justify-content-center" />
						</GridColumns>
						<NoDataTemplate>
							<TelerikSvgIcon Icon="@SvgIcon.SortClear" ThemeColor="dark" Size="sm" /> <span>No hay registros disponibles</span>
						</NoDataTemplate>
					</TelerikGrid>
				</WindowContent>
				<WindowFooter>
					<TelerikButton Icon="@(SvgIcon.TableAdd)" ThemeColor="secondary" ButtonType="@ButtonType.Button" Size="sm" OnClick="@(AgregarItemsDetalleOrden)">Agregar ítem(s)</TelerikButton>
				</WindowFooter>
			</TelerikWindow> 
			@* -- FIN SECCIÓN CATÁLOGOS INGRESO -- *@

			<TelerikDialog @bind-Visible="@EsVisibleDialogDetalle" Width="auto" ShowCloseButton="@(false)" CloseOnOverlayClick="@(false)" ThemeColor="dark" FocusedElementSelector=".ok-btn" ButtonsLayout="@(DialogButtonsLayout.Center)">
				<DialogTitle> Quitando ítem del detalle </DialogTitle>
				<DialogContent> ¿Está seguro de quitar el ítem @Detalle.CodigoArticulo? </DialogContent>
				<DialogButtons>
					<TelerikButton Class="ok-btn" Icon="@(SvgIcon.Check)" ThemeColor="secondary" OnClick="@(() => AccionarDetalle(TipoAccionDialog))" Size="sm">Sí</TelerikButton>
					<TelerikButton Class="undo-btn" Icon="@(SvgIcon.X)" OnClick="@(() => CerrarDialog())" Size="sm">No</TelerikButton>
				</DialogButtons>
			</TelerikDialog>

			<TelerikDialog @bind-Visible="@EsVisibleDialogReferencia" Width="auto" ShowCloseButton="@(false)" CloseOnOverlayClick="@(false)" ThemeColor="dark" FocusedElementSelector=".ok-btn" ButtonsLayout="@(DialogButtonsLayout.Center)">
				<DialogTitle> Quitando documento referencia </DialogTitle>
				<DialogContent> ¿Está seguro de quitar la referencia @Movimiento.CodigoDocumentoReferencia.TrimEnd()? </DialogContent>
				<DialogButtons>
					<TelerikButton Class="ok-btn" Icon="@(SvgIcon.Check)" ThemeColor="secondary" OnClick="@(QuitarItemReferencia)" Size="sm">Sí</TelerikButton>
					<TelerikButton Class="undo-btn" Icon="@(SvgIcon.X)" OnClick="@(() => { EsVisibleDialogReferencia = false; })" Size="sm">No</TelerikButton>
				</DialogButtons>
			</TelerikDialog>
		</CardBody>
	</CardContainerComponent>
} 